{"version":3,"sources":["CountdownPage.js","App.js","reportWebVitals.js","index.js"],"names":["CountdownPage","useState","handleDate","setHandleDate","blank","setBlank","thisYear","calcTimeLeft","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","timerComponent","Object","keys","forEach","interval","push","className","placeholder","value","type","min","required","onChange","e","target","onClick","s","style","display","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEe,SAASA,IAEtB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEIC,EAAWJ,EAGVK,EAAe,WAEnB,IAAMC,GAAc,IAAIC,KAAKH,IAAa,IAAIG,KAE1CC,EAAW,GAWf,OATGF,EAAa,IACbE,EAAW,CACPC,KAAMC,KAAKC,MAAML,EAAU,OAC3BM,MAAOF,KAAKC,MAAOL,EAAU,KAAwB,IACrDO,QAASH,KAAKC,MAAOL,EAAa,IAAO,GAAM,IAC/CQ,QAAQJ,KAAKC,MAAOL,EAAa,IAAQ,MAIzCE,GAET,EAAgCT,mBAASM,GAAzC,mBAAOG,EAAP,KAAiBO,EAAjB,KACCC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAYV,KACX,KACH,OAAO,kBAAMc,aAAaF,OAI5B,IAAMG,EAAiB,GAcvB,OAbAC,OAAOC,KAAKd,GAAUe,SAAQ,SAACC,GACzBhB,EAASgB,IAGbJ,EAAeK,KACb,iCAAOjB,EAASgB,GAAWA,EAA3B,IAAsC,UAQnC,gCACH,oCAAM,uBAAOE,UAAU,UAAUC,YAAY,cAAcC,MAAO5B,EAAY6B,KAAK,OAAQC,IAAI,aAC9FC,UAAQ,EAACC,SAAU,SAACC,GAAD,OAAOhC,EAAcgC,EAAEC,OAAON,aACjD,sBAAKF,UAAU,OAAf,UACA,qBAAKA,UAAU,WAAf,SAA0B,uBAAOA,UAAU,QAAQG,KAAK,SAASD,MAAM,QAAQO,QAAS,kBAAMhC,GAAS,QACxG,sBAAKuB,UAAU,SAAf,cAAyB,uBAAOA,UAAU,YAAYG,KAAK,SAASD,MAAM,gBAAgBO,QAAS,kBAAMhC,GAAS,SAACiC,GAAD,OAAQA,cAEzH,qBAAKC,MAAO,CAACC,QAASpC,EAAO,OAAS,SAAUwB,UAAU,YAA1D,SACCN,EAAemB,OAASnB,EAAiB,mDCxClCoB,MAdf,WAEE,OACE,sBAAKd,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,8BACA,oBAAGA,UAAU,QAAb,gDAAwD,uBAAxD,6DAGA,cAAC5B,EAAD,IACA,qFCDS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0588955c.chunk.js","sourcesContent":["import {React, useState, useEffect} from 'react';\r\n\r\nexport default function CountdownPage() {\r\n    //handle the input data using useState\r\n  const [handleDate, setHandleDate] = useState(\"\")\r\n  const [blank, setBlank] = useState(true)\r\n  \r\n  let thisYear = handleDate;\r\n\r\n  //write the function that calculates the time remaining\r\n const calcTimeLeft = () =>{\r\n\r\n   const difference = +new Date(thisYear) - +new Date();\r\n\r\n   let timeLeft = {};\r\n\r\n   if(difference > 0){\r\n      timeLeft = {\r\n          days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n          hours: Math.floor((difference / (1000 * 60 * 60 )) % 24),\r\n          minutes: Math.floor((difference / 1000 / 60) % 60),\r\n          seconds:Math.floor((difference / 1000) % 60)\r\n\r\n      };\r\n   }\r\n   return timeLeft;\r\n }\r\n const [timeLeft, setTimeLeft] = useState(calcTimeLeft)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calcTimeLeft)\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  })  //useEffect is why it starts the countdown immediately\r\n\r\n\r\n  const timerComponent = [];\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if(!timeLeft[interval]){\r\n      return;\r\n    }\r\n    timerComponent.push(\r\n      <span>{timeLeft[interval]}{interval} {\"\"}</span>\r\n    );\r\n    }\r\n    \r\n     );\r\n  \r\n\r\n\r\n  return <div>\r\n      <div> <input className='setDate' placeholder='Select Date' value={handleDate} type=\"date\"  min=\"2022-04-27\" \r\n       required onChange={(e) => setHandleDate(e.target.value)  }/></div>\r\n       <div className='btns'>\r\n       <div className='resetbtn'><input className='reset' type=\"button\" value=\"Reset\" onClick={() => setBlank(true)}/></div>\r\n      <div className='setbtn'> <input className='setbutton' type=\"button\" value=\"Set countdown\" onClick={() => setBlank((s) => !s)}/></div>\r\n       </div>\r\n       <div style={{display: blank? \"none\" : \"block\"}} className='countdown'>\r\n       {timerComponent.length ? timerComponent : <span>Time's up!</span>}\r\n       </div>\r\n  </div>;\r\n}\r\n","import {React} from 'react';\nimport './App.css';\nimport CountdownPage from './CountdownPage';\n\nfunction App() {\n    \n  return (\n    <div className=\"App\">\n      <h2 className='header'>Count Down Timer</h2>\n      <p className='rider'>Looking forward to that big event? <br/>\n      Set a countdown to see how long you have till that day!</p>\n     \n      <CountdownPage />\n      <footer >&copy; 2022 Silver_Codes. All Rights Reserved</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}